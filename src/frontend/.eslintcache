[{"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/index.js":"1","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/HomePage.js":"2","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/TransformerPage.js":"3","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/TabPanel.js":"4","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/MeasurementGraph.js":"5","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/HIGraph.js":"6","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/Chart.js":"7","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/reportWebVitals.js":"8","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/App.js":"9","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/MLModelForm.js":"10","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Tables/HITable.js":"11","/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Tables/InferenceTable.js":"12"},{"size":514,"mtime":1610938693831,"results":"13","hashOfConfig":"14"},{"size":3411,"mtime":1611189436024,"results":"15","hashOfConfig":"14"},{"size":5784,"mtime":1611202509259,"results":"16","hashOfConfig":"14"},{"size":716,"mtime":1611079547635,"results":"17","hashOfConfig":"14"},{"size":2472,"mtime":1611194738984,"results":"18","hashOfConfig":"14"},{"size":2872,"mtime":1611194714504,"results":"19","hashOfConfig":"14"},{"size":1393,"mtime":1611095932840,"results":"20","hashOfConfig":"14"},{"size":362,"mtime":1610899213239,"results":"21","hashOfConfig":"14"},{"size":598,"mtime":1611154886444,"results":"22","hashOfConfig":"14"},{"size":4640,"mtime":1611201898679,"results":"23","hashOfConfig":"14"},{"size":3278,"mtime":1611198169219,"results":"24","hashOfConfig":"14"},{"size":2757,"mtime":1611201755319,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1sk4etz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/index.js",[],["56","57"],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/HomePage.js",["58"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List'; \nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\n\nimport MLModelForm from './MLModelForm'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 500,\n        margin: 'auto',\n    },\n    header: {\n        width: '100%',\n        height: 100,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        marginTop: 20,\n    },\n    typography: {\n        textAlign: 'center',\n        marginTop: 50,\n    },\n    listCard: {\n        marginTop: 5,\n        margin: 'auto',\n        width: '80%'\n    },\n    list: {\n        marginTop: 50, \n        padding: 0,\n        '&:last-child': {\n        }\n    },\n    listItem: {\n    },\n}));\n\nexport default function HomePage() {\n    const classes = useStyles();\n\n    const [transformerList, setTransformerList] = useState([])\n    useEffect(() => {\n        const url = 'http://localhost:8000/api/transformers/'\n        fetch(url, {\n            method: \"GET\"\n        })\n        .then((response) => response.json())\n        .then((obj) => {\n            setTransformerList(obj.transformers);\n        })\n    }, [setTransformerList])\n    \n    const history = useHistory();\n    const clickHandler = (e) => {\n        console.log('transformer/' + e.target.innerText);\n        history.push('transformer/' + e.target.innerText);\n    }\n\n    return (\n        <>\n            <Typography variant='h3' className={classes.header}>\n                Gest√£o Digital de Ativos\n            </Typography>\n            <Grid container\n              spacing={0}\n              justify='center' \n            >\n                <Grid item xs={4}>\n                    <Typography variant=\"h4\" className={classes.typography}>\n                        Transformers\n                    </Typography>\n                    <List className={classes.list}>\n                        {transformerList.map(obj => {\n                            return (\n                                <Card \n                                  className={classes.listCard}\n                                  key={obj.id_transformer}\n                                >\n                                    <ListItem \n                                    button \n                                    onClick={(e) => clickHandler(e)} \n                                    className={classes.listItem}\n                                    >\n                                        <ListItemText\n                                        primary={obj.id_transformer}\n                                        />\n                                    </ListItem>\n                                </Card>\n                            );\n                        })}\n                    </List>\n                </Grid>\n                <Grid item xs={7}>\n                    <div style={{display: 'flex', direction: 'column', justifyContent: 'center'}}>\n                        <MLModelForm />\n                    </div>\n                </Grid>\n            </Grid>\n        </>\n    )\n}",["59","60"],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/TransformerPage.js",["61","62"],"import React, {useEffect, useState } from 'react';\nimport {makeStyles} from '@material-ui/core';\n\nimport Typography from '@material-ui/core/Typography';\nimport {Grid, Button} from '@material-ui/core';\nimport {Alert, AlertTitle} from '@material-ui/lab'\n\nimport MeasurementGraph from \"./Graphs/MeasurementGraph\";\nimport HIGraph from \"./Graphs/HIGraph\";\nimport HITable from \"./Tables/HITable\";\nimport InferenceTable from './Tables/InferenceTable'\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    alert: {\n        marginTop: 8,\n    },\n    typography: {\n        marginTop: 50,\n        textAlign: 'center'\n    },\n    twoGraphContainer: {\n        boxSizing: 'border-box',\n        marginTop:50,\n        height: 500,\n        display: 'flex',\n    },\n    button: {\n        marginTop: 30,\n        justifyContent: 'center',\n        fontWeight: 'bold', \n    }\n});\n\n\nexport default function TransformerPage(props) {\n    const classes = useStyles();\n\n    const [measurementsData, setMeasurementsData] = useState({})\n    useEffect(() => {\n        const url = \"http://localhost:8000/api/transformers/\"\n        fetch(url + props.match.params.transformerId + \"/medicoes/\", {\n            method: \"GET\" \n        })\n        .then((response) => response.json())\n        .then((obj) => {\n            setMeasurementsData({\n                load: obj.load,\n                furfural: obj.furfural,\n                dissolved_gases: obj.dissolved_gases,\n                oil_quality: obj.oil_quality\n            })\n        })\n        .catch(() => {\n            console.log(\"Can't access: \" + url);\n        })\n        \n    }, [setMeasurementsData]);;\n\n\n    const [healthIndex, setHealthIndex] = useState([]);\n    useEffect(() => {\n        const url = \"http://localhost:8000/api/transformers/\" + props.match.params.transformerId + \"/HI/\"\n        fetch(url, {\n            method: 'GET'\n        })\n        .then(response => response.json())\n        .then(listObject => {\n            setHealthIndex(listObject); \n        })\n    }, [setHealthIndex]);\n\n    function handleClick(e) {\n        let url = \"http://localhost:8000/api/transformers/\" + props.match.params.transformerId + \"/report/\";\n        window.open(url); \n    }\n    \n    const [inferredHI, setInferredHI] = useState({})\n    const [processing, setProcessing] = useState(false)\n    function inferHI(e) {\n        const url = 'http://localhost:8000/api/transformers/infer/';\n        setProcessing(true);\n        fetch(url, {\n            method: 'GET',\n        })\n        .then(response => response.json())\n        .then(json => {\n            setProcessing(false);\n            setInferredHI(json[props.match.params.transformerId]);\n        })\n    }\n    \n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <Typography variant=\"h4\" className={classes.typography}>\n                    Transformer {props.match.params.transformerId}\n                </Typography>\n            </Grid>\n            <Grid container style={{marginTop: 50}}>\n                <Grid item xs={12} md={6}>\n                <MeasurementGraph\n                  data={measurementsData.load} \n                  graphsList={[\"load_factor\", \"power_factor\"]}\n                  title={\"Load\"}\n                />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                <MeasurementGraph\n                  data={measurementsData.oil_quality}\n                  graphsList={['breakdown_voltage', 'water_content', 'acidity', 'color', 'interfacial_tension']}\n                  title={\"Oil Quality\"}\n                />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item xs={12} md={6}>\n                <MeasurementGraph\n                  data={measurementsData.furfural}\n                  graphsList={[\"quantity\"]}\n                  title={\"Furfural\"}\n                />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                <MeasurementGraph\n                  data={measurementsData.dissolved_gases}\n                  graphsList={['h2', 'ch4', 'c2h6', 'c2h4', 'c2h2', 'co', 'coh2']}\n                  title={\"Dissolved Gases\"}\n                />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item xs={12} md={6}>\n                <HIGraph\n                  data={healthIndex}\n                  graphsList={[\"Algorithm 1\", \"Algorithm 2\", \"Algorithm 3\", \"Algorithm 4\"]}\n                  title={\"Health Indices\"}\n                />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <HITable data={healthIndex}/>\n                    <Button variant='contained' onClick={inferHI} style={{fontWeight: 'bold', marginLeft: 10, marginTop:8}}>\n                        Infer Transformer Health Index\n                    </Button>\n                    {processing && \n                        <Alert \n                        severity='info'\n                        className={classes.alert}\n                        >\n                            <AlertTitle>Info</AlertTitle>\n                            Inferring Health Index\n                        </Alert>\n                    }\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    {(Object.keys(inferredHI).length !== 0) && \n                        <InferenceTable \n                        data={inferredHI}\n                        transformerId={props.match.params.transformerId}\n                        />\n                    }\n                </Grid>\n            </Grid>\n            <Button variant='contained' className={classes.button} onClick={handleClick}>\n                Generate Report for {props.match.params.transformerId}\n            </Button>\n        </Grid>\n    );\n}",["63","64"],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/TabPanel.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/MeasurementGraph.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/HIGraph.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Graphs/Chart.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/reportWebVitals.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/App.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/MLModelForm.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Tables/HITable.js",[],"/home/landaudiogo/projects/SEAI/SEAI---Equipa-F/src/frontend/src/components/Tables/InferenceTable.js",["65","66"],"import React, {useState, useEffect} from 'react'\n\nimport {makeStyles} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport Paper from '@material-ui/core/Paper'\n\n\n\nconst useStyles = makeStyles({\n    outerContainer: {\n        boxSizing: 'border-box',\n        marginTop: 30,\n        paddingLeft: 10, \n        width: '100%',\n    },\n    tableContainer: {\n        marginTop: 53\n    },\n    table: {\n\n    },\n    tableHead: {\n        backgroundColor: 'rgba(0,0,0,1)',\n        color: 'rgba(255,255,255,1)',\n        borderRadius: 4\n    },\n    tableHeadCell: {\n        color: 'rgba(255,255,255,1)',\n        fontSize: 14,\n        fontWeight: 'bold',\n    },\n    tableBodyRow: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: 'rgba(190,190,190,0.3)'\n        }\n    }\n});\n\n\n\nexport default function InferenceTable({data, transformerId}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.outerContainer}>\n            <Typography variant='h5' align='center'>\n                Transformer Inferred State\n            </Typography>\n            <TableContainer component={Paper} className={classes.tableContainer}>\n                <Table className={classes.table}>\n                    <TableHead className={classes.tableHead}>\n                        <TableRow>\n                            {['Year', 'Inferred Health Index'].map((obj, index) => (\n                                <TableCell key={index} align='left' className={classes.tableHeadCell}>\n                                    {obj}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.keys(data).map((key, index) => {\n                            return (\n                                <TableRow key={index} className={classes.tableBodyRow}>\n                                    <TableCell align='left'>\n                                        {key}\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {data[key]}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n\n    )\n}",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":9,"column":8,"nodeType":"73","messageId":"74","endLine":9,"endColumn":13},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":62,"column":8,"nodeType":"79","endLine":62,"endColumn":29,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"78","line":75,"column":8,"nodeType":"79","endLine":75,"endColumn":24,"suggestions":"81"},{"ruleId":"67","replacedBy":"82"},{"ruleId":"69","replacedBy":"83"},{"ruleId":"71","severity":1,"message":"84","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"85","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar",["86"],["87"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.transformerId'. Either include it or remove the dependency array.","ArrayExpression",["88"],["89"],["86"],["87"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [props.match.params.transformerId, setMeasurementsData]",{"range":"94","text":"95"},"Update the dependencies array to be: [props.match.params.transformerId, setHealthIndex]",{"range":"96","text":"97"},[1624,1645],"[props.match.params.transformerId, setMeasurementsData]",[2025,2041],"[props.match.params.transformerId, setHealthIndex]"]